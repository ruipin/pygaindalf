# SPDX-License-Identifier: GPLv3-or-later
# Copyright Â© 2025 pygaindalf Rui Pinheiro

from collections.abc import Iterator
from collections.abc import Set as AbstractSet
from typing import TYPE_CHECKING, Protocol


if TYPE_CHECKING:
    from ...util import Uid
    from ..instrument import Instrument, InstrumentRecord
    from ..ledger import Ledger


class PortfolioProtocol(Protocol):
    # MARK: Metadata
    @property
    def instance_name(self) -> str: ...
    @property
    def uid(self) -> Uid: ...
    @property
    def version(self) -> int: ...

    # MARK: Ledgers
    @property
    def ledgers(self) -> AbstractSet[Ledger]: ...
    def __getitem__(self, index: int | Uid | InstrumentRecord | Instrument) -> Ledger: ...
    def __contains__(self, value: object) -> bool: ...
    def __iter__(self) -> Iterator[Ledger]: ...
    def __len__(self) -> int: ...


class MutablePortfolioProtocol(PortfolioProtocol, Protocol):
    # MARK: MutableSet ABC
    def add(self, value: Ledger | Uid) -> None: ...
    def discard(self, value: Ledger | Uid) -> None: ...
    def remove(self, value: Ledger | Uid) -> None: ...
    def pop(self) -> Ledger: ...
    def clear(self) -> None: ...
